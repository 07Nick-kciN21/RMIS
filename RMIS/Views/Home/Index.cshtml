@{
    ViewData["Title"] = "Home Page";
}
<style>
    header, nav {
        margin: 0;
        padding: 0;
    }
    .custom-offcanvas-width {
        width: 20%;
    }

    .toolFGIS {
        border-bottom: 1px solid #cccccc;
        border-right: 1px solid #cccccc;
        position: absolute;
        top: 50px;
        left: 0;
        width: 320px;
        background: #f5f6fa;
    }

    #indexMap {
        height: 100vh;
        width: 100%;
    }
</style>
<link rel="stylesheet" href="~/css/index/dropdown.css" />
<link rel="stylesheet" href="~/css/index/layer.css" />
<link rel="stylesheet" href="~/css/index/menu.css" />
<link rel="stylesheet" href="~/css/index/svg_eye.css" />
<link rel="stylesheet" href="~/css/index/svg_switch.css" />
<header class="row" style="position: relative; z-index: 1051; background-color: #9ac43e">
    <div class="col">
        <div class="nav-item dropdown">
            <button class="dropdown-button" data-bs-toggle="offcanvas" data-bs-target="#layerListBlock" aria-controls="layerListBlock">側欄</button>
        </div>
    </div>
        
    <nav class="col" style="padding: 0;">
        <div class="container-fluid ">
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between" style="float: right;">
                <div class="nav-item">
                    <button class="dropdown-button" asp-area="" asp-controller="Home" asp-action="Index">Home</button>
                </div>
                <div class="nav-item dropdown">
                    <button class="dropdown-button" id="header-layer1" data-target="header-layer-list1">業務圖資</button>
                    <div class="dropdown-content" id="header-layer-list1">
                    </div>
                </div>
                
                
                <div class="nav-item dropdown">
                    <button class="dropdown-button" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        Admin
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li><a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">Map</a></li>
                        <li><a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="AddSystem">System</a></li>
                        <li><a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="AddCategory">Category</a></li>
                        <li><a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="AddPipeline">Pipeline</a></li>
                        <li><a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="AddRoad">Road</a></li>
                    </ul>
                </div>
                <div class="nav-item dropdown">
                    <button class="dropdown-button" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        常用連結
                    </button>
                </div>
                <div class="nav-item dropdown">
                    <button class="dropdown-button" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        圖資匯入
                    </button>
                </div>
                <div class="nav-item dropdown">
                    <button class="dropdown-button" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        下載專區
                    </button>
                </div>
            </div>
        </div>
    </nav>
</header>


<div class="offcanvas offcanvas-start custom-offcanvas-width" style="background-color:#f2f7ec; z-index: 1050" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="layerListBlock" aria-labelledby="layerListBlockLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">圖層套疊</h5>
    </div>
    <div class="layerList container-fluid">
        <h5 class="offcanvas-body" id="offcanvasExampleLabel">圖資清單</h5>
    </div>
</div>

<div id="indexMap"></div>

@section Scripts {
    <script>
        var MenuData = @Html.Raw(Json.Serialize(ViewBag.JsTreeData));
        // 查看是否加到圖資清單
        let layerList = {};
        // 圖層管理
        let layers = {};
        let indexMap = initMap("indexMap");
        // 遞歸生成選單
        function generateMenu(data, parent_name, index) {

            let html = '<ul class=';
            if (index > 0) {
                html += '"menu-sub"';
            } else {
                html += '"menu-background"';
            }
            html += '>';

            data.forEach(function (item) {
                console.log(item.text, item.parent);

                // 根據index和tag決定<li>的class和id
                let liClass;
                if (index == 0) {
                    liClass = 'head-menu';
                } else {
                    if (item.tag == "node") {
                        liClass = 'menu-sublayer';
                    } else {
                        liClass = 'menu-layer';
                    }
                }

                let liId;
                if (item.tag == "node") {
                    liId = '';
                } else {
                    liId = ` id="${item.id}"`;
                }

                html += `<li class="${liClass}" ${liId}>`;

                let headingTag;
                let headingClass;

                if (index == 0) {
                    headingTag = 'h4';
                    headingClass = 'border-bottom text-success';
                } else {
                    headingTag = 'span';
                    headingClass = 'text-secondary';
                }
                
                if (item.tag == "node") {
                    html += `<div class="menu-node">
                                <span class="menu-icon menu-close" id="menu-${item.id}"></span>
                                <${headingTag} class="${headingClass}">
                                    ${item.text}
                                </${headingTag}>
                            </div>`;
                }
                else {
                    html += `
                            <div class="switch switch-off" id="switch-${item.id}"></div>
                            <${headingTag} class="${headingClass}">
                                ${item.text}
                            </${headingTag}>
                             `;
                    layerList[item.id] = false;
                }
                // 遞歸處理子選單
                if (item.children && item.children.length > 0) {
                    html += generateMenu(item.children, item.text, index + 1);
                }
                html += `</li>`;
            });

            html += '</ul>';
            return html;
        }

        $(document).ready(function () {
            var menuHtml = generateMenu(MenuData, "", 0);
            $('#header-layer-list1').html(menuHtml);
            // . class
            // # id
            // 顯示或隱藏選單
            $('.dropdown-button').click(function (e) {
                e.stopPropagation();
                var targetId = $(this).data('target');
                console.log(targetId);

                $(`#${targetId}`).toggle();
            });

            $('.menu-node').click(function (e) {
                console.log("click menu");
                e.stopPropagation();
                $(this).next('.menu-sub').slideToggle();
            });


            $('.menu-layer').on('click', function (e) {
                e.stopPropagation();
                var id = $(this).attr('id');
                var name = $(this).children('span').text();
                var $switch = $(this).children('.switch');
                if (!layerList[id]) {
                    layerList[id] = true;
                    console.log(id, name);
                    addLayer(id, name, indexMap);
                    $switch.removeClass('switch-off');
                    $switch.addClass('switch-on');
                }
                else {
                    layerList[id] = false;
                    console.log("Remove to List");
                    remove2List(id);
                    removeLayer(id, indexMap);
                    $switch.removeClass('switch-on');
                    $switch.addClass('switch-off');
                }
            });

            $('.menu-node').click(function (e) {
                let $span = $(this).children('span')
                if($span.hasClass('menu-close')){
                    $span.removeClass('menu-close').addClass('menu-open');
                }
                else{
                    $span.removeClass('menu-open').addClass('menu-close');
                }
            });


            // 點擊頁面其他地方時關閉選單
            // $(document).click(function (e) {
            //     if (!$(e.target).closest('.dropdown').length) {
            //         $('.dropdown-content').hide();
            //     }
            // });
        });

        function addLayer(id, name) {
            $.ajax({
                url: `/api/MapAPI/GetRoadsByPipeline?pipelineId=${id}`,
                method: 'POST',
                success: function (data) {
                    console.log(data);
                    roads = data.roads;
                    let latlngs = [];
                    var color = data.color;
                    add2List(id, name, color);
                    roads.forEach(function (road) {
                        road.points.forEach(function (point) {
                            latlngs.push([point.latitude, point.longitude]);
                        });
                    });
                    var polyline = L.polyline(latlngs, { color: data.color });

                    polyline.addTo(indexMap);

                    layers[id] = polyline;
                    console.log("add layer success", latlngs, data.color);
                },
                error: function (err) {
                    console.error('Error fetching road data', err);
                }
            });
        }

        function removeLayer(id) {
            if (layers[id]) {
                indexMap.removeLayer(layers[id]);
                delete layers[id];
                console.log("remove layer success", id);
            } else {
                console.log("Layer not found for id:", id);
            }
        }
        function closeLayer(id) {
            indexMap.removeLayer(layers[id]);
        }
        function displayLayer(id) {
            indexMap.addLayer(layers[id]);
        }
        function add2List(id, name, color) {
            let layerItem = `
                            <div class="layerBar featureLayer-Bg" id="${id}">
                                <div class="layerTitle">
                                    <div class="layerName" style="color: ${color}">${name}</div>
                                </div>
                                <div class="eye eyeOpen" id=eye_${id}></div>
                                <div class="layerRemove" id="layerRemove_${id}"></div>
                            </div>
                            `
            $('.layerList').append(layerItem);

            $(`#eye_${id}`).on('click', function (e) {
                if ($(this).hasClass('eyeOpen')) {
                    closeLayer(id);
                    $(this).removeClass('eyeOpen');
                    $(this).addClass('eyeClosed');
                }
                else {
                    displayLayer(id, name);
                    $(this).removeClass('eyeClosed');
                    $(this).addClass('eyeOpen');
                }
            });

            $(`#layerRemove_${id}`).on('click', function (e) {
                console.log("remove click");
                removeLayer(id);
                remove2List(id);
                var $switch = $(`#switch-${id}`);
                $switch.removeClass('switch-on');
                $switch.addClass('switch-off');
            })
        }

        function remove2List(id) {
            let $layerList = $(".layerList");
            $layerList.find('#' + id).remove();
            layerList[id] = false;
        }

        function initMap(mapId) {
            var map = L.map(mapId).setView([24.957276277371435, 121.21903318892302], 13);
            let polygons = [];
            let polylines = [];
            let AreaLayer = null;
            let RoadLayer = null;
            let pipeLayers = {};
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            return map;
        }
    </script>
}
